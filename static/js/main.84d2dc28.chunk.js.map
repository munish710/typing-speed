{"version":3,"sources":["Preview.js","Speed.js","App.js","getText.js","serviceWorker.js","index.js"],"names":["Preview","props","text","userinput","split","className","map","symbol","index","color","length","key","style","backgroundColor","Speed","correctSymbols","timeTaken","wpm","Math","round","initialState","texts","floor","random","getText","started","finished","App","inputHandler","e","input","target","value","startTimer","onFinish","setState","countCorrectSymbols","restartHandler","state","userInput","this","replace","console","log","filter","interval","setInterval","prevState","clearInterval","placeholder","onChange","readOnly","rows","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mMAoBeA,MAlBf,SAAiBC,GAAQ,IACfC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,UAEZ,OADAD,EAAOA,EAAKE,MAAM,IAEd,yBAAKC,UAAU,gCAEPH,EAAKI,KAAI,SAACC,EAAQC,GACd,IAAIC,EAIJ,OAHID,EAAQL,EAAUO,SAClBD,EAAQF,IAAWJ,EAAUK,GAAS,UAAY,WAE/C,0BAAMG,IAAKH,EAAOI,MAAO,CAAEC,gBAAiBJ,IAAUF,QCJlEO,MARf,SAAeb,GAAQ,IACbc,EAA8Bd,EAA9Bc,eAAgBC,EAAcf,EAAde,UACtB,GAAuB,IAAnBD,GAAsC,IAAdC,EAAiB,CACzC,IAAMC,EAAOF,EAAiB,GAAMC,EAAY,IAChD,OAAO,mDAAyBE,KAAKC,MAAMF,GAApC,IAA0C,0BAAMZ,UAAU,QAAhB,gBAAqCW,IAE1F,OAAO,MCFLI,G,MAAe,CACnBlB,KCNa,WACX,IAAMmB,EAAQ,CACV,2LACA,+JACA,2NACA,+OACA,uMACA,obACA,2RACA,iOAEJ,OAAOA,EAAMH,KAAKI,MAAMJ,KAAKK,SAAWF,EAAMX,SDL1Cc,GACNrB,UAAW,GACXY,eAAgB,EAChBC,UAAW,EACXS,SAAS,EACTC,UAAU,IA+EGC,E,kDA5Eb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAGR2B,aAAe,SAACC,GACd,IAAMC,EAAQD,EAAEE,OAAOC,MACvB,EAAKC,aACL,EAAKC,SAASJ,GACd,EAAKK,SAAS,CACZhC,UAAW2B,EACXf,eAAgB,EAAKqB,oBAAoBN,MAV1B,EAenBO,eAAiB,WACf,EAAKF,SAASf,IAdd,EAAKkB,MAAQlB,EAFI,E,gEAmBCmB,GAClB,IAAMrC,EAAOsC,KAAKF,MAAMpC,KAAKuC,QAAQ,IAAK,IAE1C,OADAC,QAAQC,IAAIJ,GACLA,EAAUE,QAAQ,IAAK,IAAIrC,MAAM,IAAIwC,QAAO,SAACrC,EAAQC,GAAT,OAAmBD,IAAWL,EAAKM,MAAQE,S,mCAGlF,IAAD,OACN8B,KAAKF,MAAMb,UACde,KAAKL,SACH,CACEV,SAAS,IAGbe,KAAKK,SAAWC,aAAY,WAC1B,EAAKX,UAAS,SAAAY,GACZ,MAAO,CAAE/B,UAAW+B,EAAU/B,UAAY,QAE3C,Q,+BAIEuB,GACHA,IAAcC,KAAKF,MAAMpC,OAC3B8C,cAAcR,KAAKK,UACnBL,KAAKL,SAAS,CAAET,UAAU,O,+BAI5B,OAEE,yBAAKrB,UAAU,uBACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,wBACb,gCAAQ,wDACR,kBAAC,EAAD,CAASH,KAAMsC,KAAKF,MAAMpC,KAAMC,UAAWqC,KAAKF,MAAMnC,YACtD,8BACEE,UAAU,oBACV4C,YAAY,iBACZjB,MAAOQ,KAAKF,MAAMnC,UAAW+C,SAAUV,KAAKZ,aAC5CuB,SAAUX,KAAKF,MAAMZ,SACrB0B,KAAK,MAEP,kBAAC,EAAD,CAAOrC,eAAgByB,KAAKF,MAAMvB,eAAgBC,UAAWwB,KAAKF,MAAMtB,YACxE,yBAAKX,UAAU,cACb,4BAAQA,UAAU,WAAWgD,QAASb,KAAKH,gBAA3C,mB,GAjEIiB,aEDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,a","file":"static/js/main.84d2dc28.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Preview(props) {\r\n    let { text, userinput } = props\r\n    text = text.split('')\r\n    return (\r\n        <div className=\"border rounded p-3 mt-4 mb-4\">\r\n            {\r\n                text.map((symbol, index) => {\r\n                    let color\r\n                    if (index < userinput.length) {\r\n                        color = symbol === userinput[index] ? '#dfffa0' : '#fcbea4'\r\n                    }\r\n                    return <span key={index} style={{ backgroundColor: color }}>{symbol}</span>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import React from 'react'\r\nfunction Speed(props) {\r\n    let { correctSymbols, timeTaken } = props\r\n    if (correctSymbols !== 0 && timeTaken !== 0) {\r\n        const wpm = (correctSymbols / 5) / (timeTaken / 60)\r\n        return <div>Words Per Minute : {Math.round(wpm)} <span className=\"time\">Time Spent : {timeTaken}</span></div>\r\n    }\r\n    return null\r\n}\r\nexport default Speed","import React, { Component } from 'react'\nimport Preview from './Preview'\nimport Speed from './Speed'\nimport getText from './getText'\nimport './App.css'\nconst initialState = {\n  text: getText(),\n  userinput: \"\",\n  correctSymbols: 0,\n  timeTaken: 0,\n  started: false,\n  finished: false\n}\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = initialState\n  }\n  inputHandler = (e) => {\n    const input = e.target.value;\n    this.startTimer()\n    this.onFinish(input)\n    this.setState({\n      userinput: input,\n      correctSymbols: this.countCorrectSymbols(input)\n    })\n\n  }\n\n  restartHandler = () => {\n    this.setState(initialState)\n  }\n\n  countCorrectSymbols(userInput) {\n    const text = this.state.text.replace(\" \", \"\")\n    console.log(userInput);\n    return userInput.replace(\" \", \"\").split(\"\").filter((symbol, index) => symbol === text[index]).length\n  }\n\n  startTimer() {\n    if (!this.state.started) {\n      this.setState(\n        {\n          started: true\n        }\n      )\n      this.interval = setInterval(() => {\n        this.setState(prevState => {\n          return { timeTaken: prevState.timeTaken + 1 }\n        })\n      }, 1000)\n    }\n  }\n\n  onFinish(userInput) {\n    if (userInput === this.state.text) {\n      clearInterval(this.interval)\n      this.setState({ finished: true })\n    }\n  }\n  render() {\n    return (\n\n      <div className=\"container mt-5 mb-5\">\n        <div className=\"row\">\n\n          <div className=\"col-md-6 offset-md-3\">\n            <center><h1>Typing Speed Calculator</h1></center>\n            <Preview text={this.state.text} userinput={this.state.userinput} />\n            <textarea\n              className=\"form-control mb-3\"\n              placeholder=\"Start Typing..\"\n              value={this.state.userinput} onChange={this.inputHandler}\n              readOnly={this.state.finished}\n              rows=\"4\"\n            />\n            <Speed correctSymbols={this.state.correctSymbols} timeTaken={this.state.timeTaken} />\n            <div className=\"text-right\">\n              <button className=\"btn mt-2\" onClick={this.restartHandler} >Restart</button>\n            </div>\n\n\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default App\n","export default () => {\r\n    const texts = [\r\n        \"That one wants nothing to be different, not forward, not backwards, not in all eternity. Not merely bear what is necessary, still less conceal it… but love it. Friedrich Nietzsche\",\r\n        \"A Stoic is someone who transforms fear into prudence, pain into transformation, mistakes into initiation, and desire into undertaking. Nassim Nicholas Taleb\",\r\n        \"Stoicism teaches how to keep a calm and rational mind no matter what happens to you and it helps you understand and focus on what you can control and not worry about and accept what you can't control. Jonas Salzgeber\",\r\n        \"Stoicism, understood properly, is a cure for a disease. The disease in question is the anxiety, grief, fear, and various other negative emotions that plague humans and prevent them from experiencing a joyful existence. William B. Irvine\",\r\n        \"Everything can be taken from a man but one thing: the last of the human freedoms – to choose one’s attitude in any given set of circumstances, to choose one’s own way. Viktor Frankl\",\r\n        \"There are two of the most immediately useful thoughts you will dip into. First that things cannot touch the mind: they are external and inert; anxieties can only come from your internal judgement. Second, that all these things you see will change almost as you look at them, and then will be no more. Constantly bring to mind all that you yourself have already seen changed. The universe is change: life is judgement. Marcus Aurelius\",\r\n        \"How do you move forward? One step at a time. How do you lose weight? One kilo at a time. How do you write a book? One page at a time. How do you build a relationship? One day at a time. In a world obsessed with speed, never forget things of real worth and value take time. Thibaut\",\r\n        \"Give yourself fully to your endeavors. Decide to construct your character through excellent actions and determine to pay the price of a worthy goal. The trials you encounter will introduce you to your strengths. Epictetus\"\r\n    ]\r\n    return texts[Math.floor(Math.random() * texts.length)]\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}